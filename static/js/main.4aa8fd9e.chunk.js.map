{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","hasTitleError","setTitleError","hasDescriptionError","setDescriptionError","hasImgUrlError","setImgUrlError","hasImdbUrlError","setImdbUrlError","hasImdbIdError","setImdbIdError","onSubmit","event","preventDefault","placeholder","type","value","onChange","target","replace","App","moviesFromServer","setMovies","newMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4aa8fd9e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { useState } from 'react';\n\ntype Props = {\n  onAdd: (\n    movie: Movie\n  ) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasDescriptionError, setDescriptionError] = useState(false);\n  const [hasImgUrlError, setImgUrlError] = useState(false);\n  const [hasImdbUrlError, setImdbUrlError] = useState(false);\n  const [hasImdbIdError, setImdbIdError] = useState(false);\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setDescriptionError(!description);\n    setImgUrlError(!imgUrl);\n    setImdbUrlError(!imdbUrl);\n    setImdbIdError(!imdbId);\n\n    if (!title || !description || !imgUrl || !imdbUrl || !imdbId) {\n      return;\n    }\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(newMovie);\n\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  }\n\n  return (\n    <form\n      className=\"NewMovie\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <p>Title:</p>\n\n        <input\n          className=\"NewMovie__title\"\n          placeholder=\"Enter a title\"\n          type=\"text\"\n          data-cy=\"form-title\"\n          value={title}\n          onChange={event => {\n            setTitle(event.target.value\n              .replace(/[^a-zA-Zа-яА-Я0-9 ]/g, ''));\n            setTitleError(false);\n          }}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <p>Description:</p>\n        <textarea\n          className=\"NewMovie__description\"\n          placeholder=\"Enter a description\"\n          data-cy=\"form-description\"\n          value={description}\n          onChange={event => {\n            setDescription(event.target.value\n              .replace(/[^a-zA-Zа-яА-Я0-9 ]/g, ''));\n            setDescriptionError(false);\n          }}\n        />\n\n        {hasDescriptionError && (\n          <span className=\"error\">Please enter a description</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <p>Image link:</p>\n        <input\n          className=\"NewMovie__imgUrl\"\n          placeholder=\"https://m.media-amazon.com/images/M/... .jpg\"\n          type=\"text\"\n          data-cy=\"form-imgUrl\"\n          value={imgUrl}\n          onChange={event => {\n            setImgUrl(event.target.value\n              // eslint-disable-next-line max-len\n              .replace(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/, ''));\n            setImgUrlError(false);\n          }}\n        />\n\n        {hasImgUrlError && (\n          <span className=\"error\">Please enter a imgUrl</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <p>IMDB link:</p>\n        <input\n          className=\"NewMovie__imdbUrl\"\n          placeholder=\"https://www.imdb.com/title/...\"\n          type=\"text\"\n          data-cy=\"form-imdbUrl\"\n          value={imdbUrl}\n          onChange={event => {\n            setImdbUrl(event.target.value\n              // eslint-disable-next-line max-len\n              .replace(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/, ''));\n            setImdbUrlError(false);\n          }}\n        />\n\n        {hasImdbUrlError && (\n          <span className=\"error\">Please enter a imdbUrl</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <p>IMDB ID:</p>\n        <input\n          className=\"NewMovie__imdbId\"\n          placeholder=\"djijd000066789\"\n          type=\"text\"\n          data-cy=\"form-imdbId\"\n          value={imdbId}\n          onChange={event => {\n            setImdbId(event.target.value\n              .replace(/[^0-9A-Za-z ]/g, ''));\n            setImdbIdError(false);\n          }}\n        />\n\n        {hasImdbIdError && (\n          <span className=\"error\">Please enter a imdbId</span>\n        )}\n      </div>\n\n      <button\n        className=\"add_movie\"\n        type=\"submit\"\n        data-cy=\"form-submit-button\"\n      >\n        Add Movie\n      </button>\n\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    const newMovie: Movie = {\n      title: movie.title,\n      description: movie.description,\n      imgUrl: movie.imgUrl,\n      imdbUrl: movie.imdbUrl,\n      imdbId: movie.imdbId,\n    };\n\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}